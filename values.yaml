# Default values for neulander.
registryUrl: docker.io/vvcb
##############################################################################
# API
##############################################################################
api:
  image:
    name: neulander-api
    tag: latest
    pullPolicy: IfNotPresent
  apiKey:
    secret: neulander-api
    secretKey: api-key
  resources:
    limits:
      cpu: "500m"
      memory: "512Mi"
    requests:
      cpu: "100m"
      memory: "256Mi"

##############################################################################
# Medcat Worker and KEDA scaling
##############################################################################
medcat:
  image:
    name: neulander-medcat
    tag: latest
    pullPolicy: IfNotPresent
  dummyMode: true # Set to true to run medcat in dummy mode
  medcatModelPath: /models/medcat_model_14.zip # Ignored if dummyMode is true
  keda:
    queueLength: 100 # Number of messages per worker
    activationValue: 0 # Number of messages to scale from 0 -> 1
    maxReplicaCount: 4 # Maximum number of replicas
  resources: # Resource limits and requests when not in dummyMode
    limits:
      cpu: "1200m"
      memory: "10Gi"
    requests:
      cpu: "100m"
      memory: "10Gi"
  nodeSelector: {}
  tolerations: []
  affinity: {}
  storage:
    size: 10Gi
    storageClassName: default
    accessModes:
      - ReadWriteOnce
    mountPath: /models

##############################################################################
# Ingress to expose the API. No other parts of the application are exposed.
##############################################################################
ingress:
  enabled: true
  ingressClassName: nginx
  annotations: {}
  hosts:
    - host: chart-example.local
  tls:
    enabled: false
##############################################################################
# RABBITMQ Configuration
##############################################################################
rabbitmq:
  allowedNamespaces: neulander # This should be the namespace where the entire application is deployed.
  resources:
    limits:
      cpu: "500m"
      memory: "1Gi"
    requests:
      cpu: "100m"
      memory: "256Mi"
  host:
    secret: neulander-rmq-default-user
    secretKey: host
  port:
    secret: neulander-rmq-default-user
    secretKey: port
  user:
    secret: neulander-rmq-nondefault-user
    secretKey: username
  password:
    secret: neulander-rmq-nondefault-user
    secretKey: password
  connectionString:
    secret: neulander-rmq-nondefault-user
    secretKey: connection_string
