##############################################################################
# Medcat Worker Deployment
##############################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neulander-worker-medcat
  labels:
    xlscsde.nhs.uk/app: neulander-medcat_14
spec:
  replicas: 1
  selector:
    matchLabels:
      xlscsde.nhs.uk/app: neulander-medcat_14
  template:
    metadata:
      labels:
        xlscsde.nhs.uk/app: neulander-medcat_14
    spec:
      containers:
      - name: medcat-container
        image: {{ .Values.registryUrl}}/{{ .Values.medcat.image.name }}:{{ .Values.medcat.image.tag }}
        imagePullPolicy: {{ .Values.api.image.pullPolicy }}
        ports:
        - containerPort: 8000
        env:
          - name: RABBITMQ_HOST
            valueFrom:
              secretKeyRef:
                name: {{ .Values.rabbitmq.host.secret }}
                key: {{ .Values.rabbitmq.host.secretKey }}
          - name: RABBITMQ_PORT
            valueFrom:
              secretKeyRef:
                name: {{ .Values.rabbitmq.port.secret }}
                key: {{ .Values.rabbitmq.port.secretKey }}
          - name: RABBITMQ_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.rabbitmq.user.secret }}
                key: {{.Values.rabbitmq.user.secretKey }}
          - name: RABBITMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.rabbitmq.password.secret }}
                key: {{ .Values.rabbitmq.password.secretKey }}
          - name: RABBITMQ_CONNECTION_STRING
            valueFrom:
              secretKeyRef:
                name: {{ .Values.rabbitmq.connectionString.secret }}
                key: {{ .Values.rabbitmq.connectionString.secretKey }}
          - name: MEDCAT_MODEL_PATH
            value: {{ .Values.medcat.medcatModelPath }}
          {{- if eq .Values.medcat.dummyMode true }}
          - name: DUMMY_MODE
            value: "true"
          {{- end }}
        resources:
        {{- if eq .Values.medcat.dummyMode true }}
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "100m"
              memory: "256Mi"
        {{ else }}
            {{- toYaml .Values.medcat.resources | nindent 12 }}
        {{ end -}}
        {{- with .Values.medcat.nodeSelector }}
        nodeSelector:
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.medcat.affinity }}
        affinity:
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.medcat.tolerations }}
        tolerations:
          {{- toYaml . | nindent 8 }}
        {{- end }}
        volumeMounts:
        - name: medcat-storage
          mountPath: {{ .Values.medcat.storage.mountPath }} 
      volumes:
      - name: medcat-storage
        persistentVolumeClaim:
          claimName: neulander-medcat-storage
        # ToDo: Investigate this later. 
        # livenessProbe:
        #   httpGet:
        #     path: /liveness
        #     port: 8000
        #   initialDelaySeconds: 30
        #   periodSeconds: 60
        # readinessProbe:
        #   httpGet:
        #     path: /health
        #     port: 8000
        #   initialDelaySeconds: 30
        #   periodSeconds: 60
